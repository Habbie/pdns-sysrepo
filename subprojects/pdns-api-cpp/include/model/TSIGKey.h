/**
 * PowerDNS Authoritative HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.13
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TSIGKey.h
 *
 * A TSIG key that can be used to authenticate NOTIFYs and AXFRs
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_TSIGKey_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_TSIGKey_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// A TSIG key that can be used to authenticate NOTIFYs and AXFRs
/// </summary>
class  TSIGKey
    : public ModelBase
{
public:
    TSIGKey();
    virtual ~TSIGKey();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// TSIGKey members

    /// <summary>
    /// The name of the key
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// The ID for this key, used in the TSIGkey URL endpoint.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// The algorithm of the TSIG key
    /// </summary>
    utility::string_t getAlgorithm() const;
    bool algorithmIsSet() const;
    void unsetAlgorithm();

    void setAlgorithm(const utility::string_t& value);

    /// <summary>
    /// The Base64 encoded secret key, empty when listing keys. MAY be empty when POSTing to have the server generate the key material
    /// </summary>
    utility::string_t getKey() const;
    bool keyIsSet() const;
    void unsetKey();

    void setKey(const utility::string_t& value);

    /// <summary>
    /// Set to \&quot;TSIGKey\&quot;
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const utility::string_t& value);


protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Algorithm;
    bool m_AlgorithmIsSet;
    utility::string_t m_Key;
    bool m_KeyIsSet;
    utility::string_t m_Type;
    bool m_TypeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_TSIGKey_H_ */
