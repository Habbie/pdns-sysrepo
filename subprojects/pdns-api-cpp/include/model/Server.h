/**
 * PowerDNS Authoritative HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.13
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Server.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Server_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Server_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Server
    : public ModelBase
{
public:
    Server();
    virtual ~Server();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Server members

    /// <summary>
    /// Set to “Server”
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const utility::string_t& value);

    /// <summary>
    /// The id of the server, “localhost”
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// “recursor” for the PowerDNS Recursor and “authoritative” for the Authoritative Server
    /// </summary>
    utility::string_t getDaemonType() const;
    bool daemonTypeIsSet() const;
    void unsetDaemon_type();

    void setDaemonType(const utility::string_t& value);

    /// <summary>
    /// The version of the server software
    /// </summary>
    utility::string_t getVersion() const;
    bool versionIsSet() const;
    void unsetVersion();

    void setVersion(const utility::string_t& value);

    /// <summary>
    /// The API endpoint for this server
    /// </summary>
    utility::string_t getUrl() const;
    bool urlIsSet() const;
    void unsetUrl();

    void setUrl(const utility::string_t& value);

    /// <summary>
    /// The API endpoint for this server’s configuration
    /// </summary>
    utility::string_t getConfigUrl() const;
    bool configUrlIsSet() const;
    void unsetConfig_url();

    void setConfigUrl(const utility::string_t& value);

    /// <summary>
    /// The API endpoint for this server’s zones
    /// </summary>
    utility::string_t getZonesUrl() const;
    bool zonesUrlIsSet() const;
    void unsetZones_url();

    void setZonesUrl(const utility::string_t& value);


protected:
    utility::string_t m_Type;
    bool m_TypeIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Daemon_type;
    bool m_Daemon_typeIsSet;
    utility::string_t m_Version;
    bool m_VersionIsSet;
    utility::string_t m_Url;
    bool m_UrlIsSet;
    utility::string_t m_Config_url;
    bool m_Config_urlIsSet;
    utility::string_t m_Zones_url;
    bool m_Zones_urlIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Server_H_ */
