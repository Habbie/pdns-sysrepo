/**
 * PowerDNS Authoritative HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.13
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ServersApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_ServersApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_ServersApi_H_


#include "../ApiClient.h"

#include "CacheFlushResult.h"
#include "Server.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  ServersApi 
{
public:

    explicit ServersApi( std::shared_ptr<ApiClient> apiClient );

    virtual ~ServersApi();

    /// <summary>
    /// Flush a cache-entry by name
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="serverId">The id of the server to retrieve</param>
    /// <param name="domain">The domain name to flush from the cache</param>
    pplx::task<std::shared_ptr<CacheFlushResult>> cacheFlushByName(
        utility::string_t serverId,
        utility::string_t domain
    );
    /// <summary>
    /// List a server
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="serverId">The id of the server to retrieve</param>
    pplx::task<std::shared_ptr<Server>> listServer(
        utility::string_t serverId
    );
    /// <summary>
    /// List all servers
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    pplx::task<std::vector<std::shared_ptr<Server>>> listServers(
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_ServersApi_H_ */

