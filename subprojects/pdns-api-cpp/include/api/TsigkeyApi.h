/**
 * PowerDNS Authoritative HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.13
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TsigkeyApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_TsigkeyApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_TsigkeyApi_H_


#include "../ApiClient.h"

#include "Error.h"
#include "TSIGKey.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  TsigkeyApi 
{
public:

    explicit TsigkeyApi( std::shared_ptr<ApiClient> apiClient );

    virtual ~TsigkeyApi();

    /// <summary>
    /// Add a TSIG key
    /// </summary>
    /// <remarks>
    /// This methods add a new TSIGKey. The actual key can be generated by the server or be provided by the client
    /// </remarks>
    /// <param name="serverId">The id of the server</param>
    /// <param name="tSIGKey">The TSIGKey to add</param>
    pplx::task<std::shared_ptr<TSIGKey>> createTSIGKey(
        utility::string_t serverId,
        std::shared_ptr<TSIGKey> tSIGKey
    );
    /// <summary>
    /// Delete the TSIGKey with tsigkey_id
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="serverId">The id of the server to retrieve the key from</param>
    /// <param name="tsigkeyId">The id of the TSIGkey. Should match the \&quot;id\&quot; field in the TSIGKey object</param>
    pplx::task<void> deleteTSIGKey(
        utility::string_t serverId,
        utility::string_t tsigkeyId
    );
    /// <summary>
    /// Get a specific TSIGKeys on the server, including the actual key
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="serverId">The id of the server to retrieve the key from</param>
    /// <param name="tsigkeyId">The id of the TSIGkey. Should match the \&quot;id\&quot; field in the TSIGKey object</param>
    pplx::task<std::shared_ptr<TSIGKey>> getTSIGKey(
        utility::string_t serverId,
        utility::string_t tsigkeyId
    );
    /// <summary>
    /// Get all TSIGKeys on the server, except the actual key
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="serverId">The id of the server</param>
    pplx::task<std::vector<std::shared_ptr<TSIGKey>>> listTSIGKeys(
        utility::string_t serverId
    );
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// The TSIGKey at tsigkey_id can be changed in multiple ways:  * Changing the Name, this will remove the key with tsigkey_id after adding.  * Changing the Algorithm  * Changing the Key Only the relevant fields have to be provided in the request body. 
    /// </remarks>
    /// <param name="serverId">The id of the server to retrieve the key from</param>
    /// <param name="tsigkeyId">The id of the TSIGkey. Should match the \&quot;id\&quot; field in the TSIGKey object</param>
    /// <param name="tSIGKey">A (possibly stripped down) TSIGKey object with the new values</param>
    pplx::task<std::shared_ptr<TSIGKey>> putTSIGKey(
        utility::string_t serverId,
        utility::string_t tsigkeyId,
        std::shared_ptr<TSIGKey> tSIGKey
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_TsigkeyApi_H_ */

